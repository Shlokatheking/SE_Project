/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import BackgroundRemovebgPrImage from 'src/assets/images/SelectionPage_Background_removebg_preview_1.png';
import Image202303012259237Image from 'src/assets/images/SelectionPage_image_2023_03_01_225923788_removebg_preview_1.png';
import { styled } from '@mui/material/styles';
import ButtonPrimary from './ButtonPrimary';

const SelectionPage1 = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 0.3)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  height: `700px`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
});

const Background = styled('div')({
  backgroundColor: `rgba(0, 118, 190, 1)`,
  width: `1440px`,
  height: `700px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

const Content = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `399px`,
  height: `371px`,
  left: `118px`,
  top: `237px`,
});

const ButtonPrimary1 = styled(ButtonPrimary)(({ theme }) => ({
  width: `200px`,
  height: `60px`,
  position: `absolute`,
  left: `0px`,
  top: `311px`,
}));

const Title = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(139, 217, 199, 1)`,
  fontStyle: `normal`,
  fontFamily: `Quicksand`,
  fontWeight: `700`,
  fontSize: `48px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  textShadow: `0px 4px 4px rgba(0, 0, 0, 0.25)`,
  width: `399px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

const BackgroundRemovebgPr = styled('img')({
  height: `575px`,
  width: `610px`,
  objectFit: `cover`,
  position: `absolute`,
  left: `730px`,
  top: `62px`,
});

const Image202303012259237 = styled('img')({
  height: `188px`,
  width: `627px`,
  objectFit: `cover`,
  position: `absolute`,
  left: `5px`,
  top: `62px`,
});

const Content1 = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `399px`,
  height: `381px`,
  left: `829px`,
  top: `224px`,
});

const ButtonPrimary2 = styled(ButtonPrimary)(({ theme }) => ({
  width: `200px`,
  height: `60px`,
  position: `absolute`,
  left: `0px`,
  top: `321px`,
}));

const Title1Span1 = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(139, 217, 199, 1)`,
  fontStyle: `normal`,
  fontFamily: `Quicksand`,
  fontWeight: `700`,
  fontSize: `56px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
});

const Title1Span2 = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(139, 217, 199, 1)`,
  fontStyle: `normal`,
  fontFamily: `Quicksand`,
  fontWeight: `700`,
  fontSize: `48px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
});

const Title1 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(139, 217, 199, 1)`,
  fontStyle: `normal`,
  fontFamily: `Quicksand`,
  fontWeight: `700`,
  fontSize: `nullpx`,
  letterSpacing: `NaNpx`,
  textDecoration: `none`,
  textTransform: `none`,
  textShadow: `0px 4px 4px rgba(0, 0, 0, 0.25)`,
  width: `399px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
});

function SelectionPage(props) {
  return (
    <SelectionPage1 className={props.className}>
      <Background></Background>
      <Content>
        <ButtonPrimary endPoint={'start-up-registration'} title={"Start-up"} topMargin={'297px'} width={'150px'} />
        <Title>{`Wanna reach out to potential investors?`}</Title>
      </Content>
      {false && (
        <BackgroundRemovebgPr
          src={BackgroundRemovebgPrImage}
          loading="lazy"
          alt={'Background-removebg-preview 1'}
        />
      )}
      <Image202303012259237
        src={Image202303012259237Image}
        loading="lazy"
        alt={'image_2023-03-01_225923788-removebg-preview 1'}
      />
      <Content1>
        <ButtonPrimary endPoint={'user-registration'} title={"Donor/Investor"} topMargin={'297px'} width={'150px'} />
        <Title1>
          <Title1Span1>{`Your choice: `}</Title1Span1>
          <Title1Span2>{`Donate for a cause or invest for returns `}</Title1Span2>
        </Title1>
      </Content1>
    </SelectionPage1>
  );
}

export default SelectionPage;
